// import React, { useEffect, useRef, useState } from "react";
// import "./level18.scss";
// import imageMapResize from "image-map-resizer";

// function Level18() {
//   const click = (nume) => {
//     console.log(nume);
//   };
//   const imgRef = useRef(null);
//   const [dimensions, setDimensions] = useState({ width: 1, height: 1 });

//   // Original dimensions of the image
//   const naturalSize = { width: window.innerWidth, height: window.innerWidth }; // modificÄƒ la dimensiunile reale ale imaginii

//   useEffect(() => {
//     const handleResize = () => {
//       if (imgRef.current) {
//         const { width, height } = imgRef.current.getBoundingClientRect();
//         setDimensions({ width, height });
//       }
//     };
//     handleResize();
//     window.addEventListener("resize", handleResize);
//     return () => window.removeEventListener("resize", handleResize);
//   }, []);

//   const scale = {
//     x: dimensions.width / naturalSize.width,
//     y: dimensions.height / naturalSize.height,
//   };

//   const getScaledCoords = (coords) =>
//     coords
//       .split(",")
//       .map((c, i) => Math.round(c * (i % 2 === 0 ? scale.x : scale.y)))
//       .join(",");
//   // coords
//   return (
//     <div>
//       <div className="nebunie">
//         <img
//           src={require("../../assets/img/level18.jpg")}
//           alt=""
//           ref={imgRef}
//           style={{  maxWidth: "100%", height: "auto" }}
//           useMap="#map"
//           onLoad={() => {
//             const { width, height } = imgRef.current.getBoundingClientRect();
//             setDimensions({ width, height });
//           }}
//         />
//         <map name="map">
//           <area
//             onClick={() => click("ccccc")}
//             shape="poly"
//             style={{ background: "rgba(0, 0, 0, 0.7)" }}
//             coords={getScaledCoords(
//               "1810, 1025, 1823, 1020, 1825, 1003, 1817, 990, 1842, 974, 1858, 979, 1870, 998, 1868, 1019, 1883, 1024, 1893, 1030, 1894, 1053, 1851, 1080, 1838, 1045, 1814, 1031"
//             )}
//           />
//           <area
//             onClick={() => click("matei")}
//             shape="poly"
//             style={{ background: "rgba(0, 0, 0, 0.7)" }}
//             coords={getScaledCoords(
//               "1767, 1029, 1746, 1049, 1749, 1071, 1755, 1087, 1771, 1082, 1812, 1121, 1842, 1081, 1834, 1051, 1805, 1034, 1812, 1003, 1796, 989, 1774, 998, 1766, 1020"
//             )}
//           />
//           <area
//             onClick={() => click("matei")}
//             shape="poly"
//             style={{ background: "rgba(0, 0, 0, 0.7)" }}
//             coords={getScaledCoords(
//               "1695, 1044, 1701, 1050, 1700, 1066, 1711, 1052, 1739, 1062, 1749, 1038, 1760, 1031, 1750, 994, 1717, 996"
//             )}
//           />
//           <area
//             onClick={() => click("matei")}
//             shape="poly"
//             style={{ background: "rgba(0, 0, 0, 0.7)" }}
//             coords={getScaledCoords(
//               "1702, 1088, 1708, 1105, 1715, 1119, 1726, 1127, 1733, 1114, 1737, 1098, 1749, 1088, 1752, 1079, 1725, 1059, 1711, 1059, 1701, 1075"
//             )}
//           />
//           <area
//             onClick={() => click("matei")}
//             shape="poly"
//             style={{ background: "rgba(0, 0, 0, 0.7)" }}
//             coords={getScaledCoords(
//               "1662, 1052, 1671, 1043, 1690, 1045, 1696, 1051, 1695, 1069, 1696, 1095, 1696, 1112, 1693, 1124, 1684, 1127, 1669, 1119, 1671, 1100, 1666, 1087, 1658, 1059"
//             )}
//           />
//           <area
//             onClick={() => click("matei")}
//             shape="poly"
//             style={{ background: "rgba(0, 0, 0, 0.7)" }}
//             coords={getScaledCoords(
//               "1800, 1159, 1811, 1140, 1817, 1127, 1838, 1117, 1855, 1083, 1875, 1068, 1890, 1062, 1895, 1077, 1891, 1140, 1893, 1165, 1894, 1404, 1772, 1412, 1801, 1287, 1793, 1237"
//             )}
//           />
//           <area
//             onClick={() => click("matei")}
//             shape="poly"
//             style={{ background: "rgba(0, 0, 0, 0.7)" }}
//             coords={getScaledCoords(
//               "1697, 1341, 1696, 1306, 1697, 1275, 1701, 1245, 1703, 1232, 1703, 1217, 1705, 1198, 1709, 1168, 1714, 1148, 1725, 1141, 1737, 1130, 1738, 1108, 1747, 1095, 1765, 1089, 1790, 1103, 1800, 1120, 1793, 1147, 1793, 1165, 1794, 1194, 1786, 1243, 1788, 1285, 1782, 1318, 1777, 1333, 1770, 1352, 1768, 1373, 1768, 1385, 1766, 1396, 1759, 1407, 1744, 1395, 1726, 1374, 1706, 1356, 1699, 1346"
//             )}
//           />
//           <area
//             onClick={() => click("matei")}
//             shape="poly"
//             style={{ background: "rgba(0, 0, 0, 0.7)" }}
//             coords={getScaledCoords(
//               "1590, 1418, 1589, 1399, 1597, 1384, 1596, 1363, 1603, 1336, 1588, 1311, 1612, 1293, 1625, 1300, 1637, 1307, 1646, 1324, 1660, 1340, 1680, 1354, 1705, 1368, 1733, 1390, 1746, 1404, 1746, 1423"
//             )}
//           />
//           <area
//             onClick={() => click("matei")}
//             shape="poly"
//             style={{ background: "rgba(0, 0, 0, 0.7)" }}
//             coords={getScaledCoords(
//               "1627, 1095, 1624, 1081, 1630, 1064, 1643, 1057, 1655, 1062, 1663, 1077, 1663, 1105, 1662, 1120, 1681, 1128, 1695, 1138, 1700, 1161, 1697, 1184, 1694, 1202, 1690, 1225, 1686, 1251, 1684, 1276, 1686, 1321, 1685, 1336, 1669, 1339, 1655, 1329, 1645, 1304, 1618, 1293, 1607, 1297, 1600, 1292, 1599, 1261, 1596, 1231, 1593, 1196, 1591, 1166, 1591, 1147, 1598, 1124, 1607, 1112, 1626, 1103"
//             )}
//           />
//           <area
//             onClick={() => click("matei")}
//             shape="poly"
//             style={{ background: "rgba(0, 0, 0, 0.7)" }}
//             coords={getScaledCoords(
//               "1528, 991, 1539, 987, 1542, 978, 1536, 968, 1542, 957, 1555, 951, 1569, 951, 1576, 956, 1574, 966, 1569, 978, 1572, 1003, 1573, 1011, 1568, 1022, 1554, 1017, 1546, 998, 1536, 993"
//             )}
//           />
//           <area
//             onClick={() => click("matei")}
//             shape="poly"
//             style={{ background: "rgba(0, 0, 0, 0.7)" }}
//             coords={getScaledCoords(
//               "1546, 1163, 1542, 1225, 1538, 1259, 1542, 1289, 1533, 1312, 1560, 1319, 1567, 1286, 1574, 1259, 1575, 1227, 1582, 1193, 1578, 1167, 1581, 1135, 1591, 1114, 1611, 1104, 1622, 1094, 1617, 1070, 1632, 1054, 1639, 1042, 1618, 1021, 1613, 1008, 1608, 977, 1595, 969, 1577, 972, 1576, 980, 1575, 997, 1578, 1020, 1576, 1026, 1567, 1033, 1567, 1060, 1568, 1078, 1568, 1096, 1566, 1117, 1562, 1136, 1558, 1151, 1550, 1160"
//             )}
//           />
//           <area
//             onClick={() => click("matei")}
//             shape="poly"
//             style={{ background: "rgba(0, 0, 0, 0.7)" }}
//             coords={getScaledCoords(
//               "1547, 1152, 1560, 1129, 1564, 1106, 1564, 1084, 1563, 1057, 1560, 1039, 1547, 1010, 1534, 999, 1527, 998, 1515, 1004, 1508, 1018, 1505, 1034, 1501, 1048, 1500, 1054, 1508, 1062, 1527, 1077, 1531, 1097, 1540, 1119, 1544, 1142"
//             )}
//           />
//           <area
//             onClick={() => click("matei")}
//             shape="poly"
//             style={{ background: "rgba(0, 0, 0, 0.7)" }}
//             coords={getScaledCoords(
//               "1419, 1284, 1425, 1256, 1419, 1221, 1417, 1198, 1415, 1182, 1413, 1170, 1412, 1159, 1413, 1139, 1411, 1119, 1412, 1103, 1419, 1091, 1431, 1076, 1440, 1066, 1442, 1052, 1447, 1032, 1454, 1021, 1460, 1020, 1474, 1024, 1482, 1030, 1493, 1041, 1494, 1055, 1498, 1063, 1515, 1076, 1528, 1099, 1535, 1123, 1535, 1146, 1523, 1175, 1513, 1199, 1513, 1225, 1513, 1250, 1510, 1275, 1508, 1303, 1506, 1324, 1498, 1328, 1475, 1315, 1466, 1294, 1453, 1280, 1431, 1283"
//             )}
//           />
//           <area
//             onClick={() => click("matei")}
//             shape="poly"
//             style={{ background: "rgba(0, 0, 0, 0.7)" }}
//             coords={getScaledCoords(
//               "1404, 984, 1405, 973, 1405, 962, 1413, 951, 1428, 949, 1433, 955, 1438, 969, 1440, 983, 1439, 996, 1436, 1001"
//             )}
//           />
//           <area
//             onClick={() => click("matei")}
//             shape="poly"
//             style={{ background: "rgba(0, 0, 0, 0.7)" }}
//             coords={getScaledCoords(
//               "1253, 1024, 1249, 1010, 1249, 993, 1255, 980, 1260, 967, 1267, 955, 1275, 948, 1288, 940, 1292, 935, 1291, 922, 1294, 911, 1308, 904, 1318, 903, 1325, 921, 1322, 932, 1338, 943, 1344, 949, 1334, 957, 1345, 968, 1345, 985, 1347, 1004, 1343, 1021, 1337, 1032, 1333, 1046, 1337, 1066, 1334, 1073, 1321, 1078, 1310, 1087, 1307, 1094, 1294, 1074, 1286, 1063, 1285, 1041, 1275, 1025, 1260, 1022"
//             )}
//           />
//           <area
//             onClick={() => click("matei")}
//             shape="poly"
//             style={{ background: "rgba(0, 0, 0, 0.7)" }}
//             coords={getScaledCoords(
//               "1313, 1098, 1323, 1086, 1339, 1079, 1347, 1077, 1340, 1057, 1340, 1038, 1357, 1027, 1370, 1034, 1379, 1044, 1381, 1058, 1374, 1075, 1374, 1084, 1392, 1091, 1400, 1098, 1405, 1128, 1404, 1160, 1403, 1200, 1411, 1226, 1402, 1261, 1405, 1280, 1400, 1295, 1387, 1311, 1365, 1323, 1359, 1323, 1352, 1291, 1347, 1256, 1336, 1236, 1324, 1204, 1323, 1183, 1320, 1163, 1320, 1141, 1319, 1119, 1316, 1107"
//             )}
//           />
//           <area
//             onClick={() => click("matei")}
//             shape="poly"
//             style={{ background: "rgba(0, 0, 0, 0.7)" }}
//             coords={getScaledCoords(
//               "1243, 1077, 1245, 1071, 1243, 1065, 1241, 1058, 1242, 1047, 1245, 1039, 1255, 1032, 1268, 1031, 1279, 1047, 1282, 1069, 1282, 1080, 1298, 1094, 1312, 1111, 1318, 1133, 1317, 1170, 1325, 1208, 1307, 1230, 1303, 1252, 1317, 1275, 1307, 1298, 1289, 1317, 1270, 1328, 1232, 1327, 1230, 1299, 1230, 1249, 1224, 1217, 1219, 1195, 1217, 1167, 1215, 1139, 1213, 1117, 1211, 1103, 1215, 1086, 1227, 1079, 1239, 1076"
//             )}
//           />
//           <area
//             onClick={() => click("matei")}
//             shape="poly"
//             style={{ background: "rgba(0, 0, 0, 0.7)" }}
//             coords={getScaledCoords(
//               "998, 1082, 994, 1050, 998, 1023, 997, 993, 1006, 972, 1022, 961, 1035, 953, 1041, 943, 1041, 925, 1045, 909, 1063, 904, 1078, 917, 1082, 936, 1078, 949, 1091, 957, 1102, 966, 1105, 988, 1111, 1026, 1115, 1042, 1116, 1060, 1116, 1075, 1111, 1090, 1098, 1100, 1089, 1105, 1076, 1093, 1063, 1087, 1048, 1073, 1055, 1051, 1044, 1036, 1021, 1035, 1006, 1041, 1003, 1056"
//             )}
//           />
//           <area
//             onClick={() => click("matei")}
//             shape="poly"
//             style={{ background: "rgba(0, 0, 0, 0.7)" }}
//             coords={getScaledCoords(
//               "852, 1023, 864, 1005, 872, 993, 880, 987, 886, 976, 885, 954, 902, 943, 912, 951, 922, 967, 926, 983, 945, 1005, 953, 1027, 958, 1041, 944, 1030, 934, 1025, 926, 1013, 916, 976, 893, 984, 884, 1028"
//             )}
//           />
//           <area
//             onClick={() => click("matei")}
//             shape="poly"
//             style={{ background: "rgba(0, 0, 0, 0.7)" }}
//             coords={getScaledCoords(
//               "887, 1037, 892, 1025, 890, 1013, 898, 985, 907, 982, 916, 987, 924, 1006, 922, 1022, 929, 1037, 947, 1043, 955, 1062, 961, 1092, 959, 1113, 963, 1137, 963, 1150, 954, 1165, 932, 1167, 932, 1158, 929, 1134, 928, 1113, 926, 1097, 912, 1082, 899, 1069, 888, 1056, 885, 1040, 884, 1035"
//             )}
//           />
//           <area
//             onClick={() => click("matei")}
//             shape="poly"
//             style={{ background: "rgba(0, 0, 0, 0.7)" }}
//             coords={getScaledCoords(
//               "840, 1075, 843, 1060, 841, 1043, 848, 1032, 867, 1029, 879, 1034, 880, 1058, 892, 1072, 909, 1085, 923, 1103, 927, 1133, 927, 1157, 921, 1178, 904, 1200, 914, 1221, 919, 1238, 920, 1270, 924, 1291, 924, 1312, 919, 1337, 897, 1336, 871, 1331, 849, 1331, 838, 1321, 838, 1294, 839, 1257, 838, 1236, 831, 1216, 827, 1193, 817, 1170, 813, 1144, 813, 1128, 817, 1108, 828, 1095, 837, 1086"
//             )}
//           />
//           <area
//             onClick={() => click("matei")}
//             shape="poly"
//             style={{ background: "rgba(0, 0, 0, 0.7)" }}
//             coords={getScaledCoords(
//               "765, 1003, 774, 990, 786, 992, 799, 1003, 802, 1025, 805, 1036, 819, 1044, 833, 1057, 831, 1078, 820, 1094, 810, 1095, 812, 1176, 829, 1239, 817, 1327, 781, 1325, 742, 1295, 742, 1176, 731, 1168, 740, 1144, 732, 1134, 740, 1094, 722, 1080, 710, 1057, 723, 1044, 724, 1024, 728, 1014"
//             )}
//           />
//           <area
//             onClick={() => click("matei")}
//             shape="poly"
//             style={{ background: "rgba(0, 0, 0, 0.7)" }}
//             coords={getScaledCoords(
//               "731, 972, 737, 962, 735, 943, 745, 930, 758, 926, 768, 933, 771, 950, 771, 966, 782, 972, 798, 981, 807, 999, 809, 1024, 805, 1029, 799, 988, 772, 987, 759, 1000, 739, 1006, 722, 1013, 719, 1040, 709, 1048, 705, 1052, 704, 1027, 707, 1004, 709, 992, 720, 983"
//             )}
//           />
//           <area
//             onClick={() => click("matei")}
//             shape="poly"
//             style={{ background: "rgba(0, 0, 0, 0.7)" }}
//             coords={getScaledCoords(
//               "627, 1030, 631, 995, 634, 970, 643, 952, 658, 943, 668, 936, 671, 915, 685, 894, 705, 904, 705, 922, 704, 938, 712, 944, 728, 952, 734, 961, 726, 975, 711, 985, 702, 1015, 702, 1033, 700, 1039, 686, 1015, 673, 1001, 658, 1004, 645, 1011, 648, 1026, 646, 1035, 641, 1046, 630, 1036"
//             )}
//           />
//           <area
//             onClick={() => click("matei")}
//             shape="poly"
//             style={{ background: "rgba(0, 0, 0, 0.7)" }}
//             coords={getScaledCoords(
//               "564, 949, 568, 938, 578, 930, 590, 940, 594, 952, 594, 969, 603, 979, 610, 992, 611, 1010, 616, 1026, 616, 1035, 606, 1028, 605, 1007, 595, 995, 582, 993, 576, 991, 568, 972"
//             )}
//           />
//           <area
//             onClick={() => click("matei")}
//             shape="poly"
//             style={{ background: "rgba(0, 0, 0, 0.7)" }}
//             coords={getScaledCoords(
//               "495, 951, 503, 943, 507, 935, 517, 928, 523, 930, 514, 913, 521, 899, 532, 893, 547, 898, 552, 911, 555, 920, 554, 929, 548, 944, 558, 954, 562, 962, 555, 972, 538, 954, 532, 974, 526, 991, 520, 1006, 513, 1019, 505, 1022, 503, 1004, 496, 995, 483, 983, 485, 966"
//             )}
//           />
//           <area
//             onClick={() => click("matei")}
//             shape="poly"
//             style={{ background: "rgba(0, 0, 0, 0.7)" }}
//             coords={getScaledCoords(
//               "448, 965, 450, 949, 458, 937, 466, 930, 481, 937, 489, 945, 489, 956, 479, 976, 476, 986, 486, 996, 497, 1004, 503, 1017, 496, 1032, 483, 1039, 472, 1046, 466, 1059, 458, 1070, 446, 1071, 429, 1067, 428, 1053, 434, 1039, 423, 1024, 401, 1015, 397, 1004, 412, 994, 429, 990, 441, 984, 449, 968"
//             )}
//           />
//           <area
//             onClick={() => click("matei")}
//             shape="poly"
//             style={{ background: "rgba(0, 0, 0, 0.7)" }}
//             coords={getScaledCoords(
//               "390, 965, 391, 955, 385, 938, 390, 921, 404, 914, 420, 915, 429, 922, 432, 940, 428, 951, 427, 962, 437, 966, 446, 970, 437, 981, 423, 984, 400, 990, 391, 1005, 387, 1017, 386, 1031, 376, 1042, 371, 1051, 368, 1064, 358, 1073, 356, 1064, 358, 1045, 355, 1031, 348, 1023, 347, 1016, 357, 1005, 372, 987, 379, 974, 386, 969"
//             )}
//           />
//           <area
//             onClick={() => click("matei")}
//             shape="poly"
//             style={{ background: "rgba(0, 0, 0, 0.7)" }}
//             coords={getScaledCoords(
//               "307, 970, 308, 923, 349, 930, 348, 968, 371, 980, 344, 1012"
//             )}
//           />
//           <area
//             onClick={() => click("matei")}
//             shape="poly"
//             style={{ background: "rgba(0, 0, 0, 0.7)" }}
//             coords={getScaledCoords(
//               "284, 1025, 285, 997, 305, 981, 319, 995, 327, 1017, 342, 1028, 353, 1044, 352, 1069, 334, 1081, 330, 1089, 331, 1126, 336, 1177, 338, 1202, 343, 1234, 336, 1269, 328, 1256, 324, 1219, 328, 1196, 319, 1170, 317, 1155, 326, 1136, 324, 1094, 307, 1072, 295, 1070, 286, 1037"
//             )}
//           />
//           <area
//             onClick={() => click("matei")}
//             shape="poly"
//             style={{ background: "rgba(0, 0, 0, 0.7)" }}
//             coords={getScaledCoords(
//               "209, 955, 230, 963, 234, 995, 244, 1006, 259, 1012, 257, 1029, 233, 1048, 210, 1044, 209, 1017, 196, 1000, 196, 988, 203, 977"
//             )}
//           />
//           <area
//             onClick={() => click("matei")}
//             shape="poly"
//             style={{ background: "rgba(0, 0, 0, 0.7)" }}
//             coords={getScaledCoords(
//               "95, 1004, 107, 996, 108, 969, 118, 955, 144, 953, 145, 973, 144, 996, 156, 1003, 163, 1005, 157, 1024, 157, 1033, 153, 1056, 144, 1053, 130, 1045, 116, 1033, 107, 1011, 102, 1001"
//             )}
//           />
//           <area
//             onClick={() => click("matei")}
//             shape="poly"
//             style={{ background: "rgba(0, 0, 0, 0.7)" }}
//             coords={getScaledCoords(
//               "170, 904, 192, 919, 191, 941, 189, 956, 205, 963, 190, 988, 172, 1000, 152, 997, 145, 978, 149, 960, 145, 944, 151, 933, 168, 919"
//             )}
//           />
//           <area
//             onClick={() => click("matei")}
//             shape="poly"
//             style={{ background: "rgba(0, 0, 0, 0.7)" }}
//             coords={getScaledCoords(
//               "47, 1026, 42, 962, 51, 939, 60, 910, 78, 892, 98, 890, 100, 874, 103, 850, 125, 840, 143, 854, 141, 874, 138, 895, 165, 902, 162, 915, 141, 931, 140, 939, 132, 948, 104, 948, 93, 979, 90, 996, 64, 1005"
//             )}
//           />
//           <area
//             onClick={() => click("matei")}
//             shape="poly"
//             style={{ background: "rgba(0, 0, 0, 0.7)" }}
//             coords={getScaledCoords(
//               "1, 1280, 34, 1265, 53, 1236, 55, 1218, 56, 1199, 42, 1171, 34, 1156, 23, 1129, 21, 1107, 27, 1088, 20, 1060, 9, 1057, 1, 1053, 2, 1284"
//             )}
//           />
//           <area
//             onClick={() => click("matei")}
//             shape="poly"
//             style={{ background: "rgba(0, 0, 0, 0.7)" }}
//             coords={getScaledCoords(
//               "131, 1278, 130, 1215, 129, 1185, 117, 1138, 111, 1113, 118, 1085, 131, 1069, 134, 1053, 106, 1044, 101, 1023, 86, 1006, 65, 1004, 55, 1013, 52, 1031, 51, 1052, 51, 1076, 39, 1098, 30, 1115, 46, 1155, 56, 1177, 65, 1209, 59, 1235, 50, 1255, 54, 1267, 86, 1273, 120, 1280"
//             )}
//           />
//           <area
//             onClick={() => click("matei")}
//             shape="poly"
//             style={{ background: "rgba(0, 0, 0, 0.7)" }}
//             coords={getScaledCoords(
//               "158, 1280, 152, 1241, 141, 1212, 136, 1193, 132, 1170, 126, 1146, 121, 1116, 124, 1101, 133, 1080, 153, 1067, 162, 1060, 168, 1043, 164, 1039, 161, 1024, 165, 1015, 181, 1003, 195, 1005, 206, 1017, 207, 1029, 202, 1044, 211, 1051, 231, 1054, 239, 1070, 233, 1088, 213, 1101, 207, 1113, 202, 1145, 202, 1172, 206, 1186, 207, 1199, 206, 1217, 203, 1242, 202, 1264, 202, 1280, 155, 1284"
//             )}
//           />
//           <area
//             onClick={() => click("matei")}
//             shape="poly"
//             style={{ background: "rgba(0, 0, 0, 0.7)" }}
//             coords={getScaledCoords(
//               "322, 1301, 319, 1227, 323, 1191, 308, 1160, 323, 1120, 311, 1088, 298, 1079, 288, 1061, 281, 1034, 263, 1029, 249, 1033, 240, 1051, 239, 1069, 242, 1089, 220, 1102, 206, 1167, 215, 1176, 218, 1201, 211, 1231, 211, 1251, 213, 1276, 218, 1295"
//             )}
//           />
//           <area
//             onClick={() => click("matei")}
//             shape="poly"
//             style={{ background: "rgba(0, 0, 0, 0.7)" }}
//             coords={getScaledCoords(
//               "345, 1207, 358, 1259, 355, 1307, 431, 1308, 440, 1239, 426, 1193, 443, 1182, 431, 1136, 443, 1077, 417, 1067, 428, 1038, 396, 1020, 378, 1049, 378, 1072, 336, 1088"
//             )}
//           />
//           <area
//             onClick={() => click("matei")}
//             shape="poly"
//             style={{ background: "rgba(0, 0, 0, 0.7)" }}
//             coords={getScaledCoords(
//               "495, 1034, 523, 1017, 542, 963, 567, 982, 564, 1001, 550, 1023, 558, 1038, 549, 1056, 534, 1081, 518, 1031"
//             )}
//           />
//           <area
//             onClick={() => click("matei")}
//             shape="poly"
//             style={{ background: "rgba(0, 0, 0, 0.7)" }}
//             coords={getScaledCoords(
//               "532, 1090, 525, 1080, 512, 1039, 483, 1042, 467, 1073, 447, 1082, 447, 1110, 438, 1144, 450, 1178, 436, 1203, 449, 1245, 442, 1310, 482, 1311, 516, 1273, 517, 1233, 537, 1191, 534, 1145, 515, 1124"
//             )}
//           />
//           <area
//             onClick={() => click("matei")}
//             shape="poly"
//             style={{ background: "rgba(0, 0, 0, 0.7)" }}
//             coords={getScaledCoords(
//               "649, 1068, 627, 1043, 604, 1036, 593, 997, 560, 1006, 568, 1048, 546, 1063, 526, 1125, 542, 1143, 536, 1176, 568, 1326, 583, 1324, 593, 1258, 576, 1237, 601, 1205, 593, 1176, 623, 1098"
//             )}
//           />
//           <area
//             onClick={() => click("matei")}
//             shape="poly"
//             style={{ background: "rgba(0, 0, 0, 0.7)" }}
//             coords={getScaledCoords(
//               "639, 1086, 626, 1109, 641, 1134, 620, 1110, 601, 1185, 606, 1206, 585, 1243, 599, 1255, 590, 1325, 673, 1324, 679, 1259, 684, 1185, 689, 1134, 664, 1098"
//             )}
//           />
//           <area
//             onClick={() => click("matei")}
//             shape="poly"
//             style={{ background: "rgba(0, 0, 0, 0.7)" }}
//             coords={getScaledCoords(
//               "651, 1081, 659, 1069, 646, 1051, 653, 1026, 653, 1012, 675, 1007, 679, 1024, 700, 1048, 711, 1068, 726, 1091, 722, 1124, 734, 1147, 719, 1189, 717, 1302, 682, 1314, 683, 1241, 690, 1198, 694, 1129, 676, 1091"
//             )}
//           />
//           <area
//             onClick={() => click("matei")}
//             shape="poly"
//             style={{ background: "rgba(0, 0, 0, 0.7)" }}
//             coords={getScaledCoords(
//               "1143, 1060, 1126, 1025, 1139, 972, 1163, 954, 1155, 922, 1186, 912, 1202, 935, 1193, 961, 1219, 977, 1235, 1013, 1227, 1026, 1227, 1039, 1196, 1088, 1167, 1034"
//             )}
//           />
//           <area
//             onClick={() => click("matei")}
//             shape="poly"
//             style={{ background: "rgba(0, 0, 0, 0.7)" }}
//             coords={getScaledCoords(
//               "1117, 1330, 1129, 1290, 1114, 1229, 1102, 1221, 1102, 1245, 1078, 1232, 1084, 1206, 1082, 1188, 1124, 1094, 1139, 1093, 1164, 1040, 1193, 1094, 1207, 1115, 1216, 1234, 1206, 1264, 1191, 1254, 1176, 1334"
//             )}
//           />
//           <area
//             onClick={() => click("matei")}
//             shape="poly"
//             style={{ background: "rgba(0, 0, 0, 0.7)" }}
//             coords={getScaledCoords(
//               "1372, 1393, 1357, 1363, 1363, 1337, 1401, 1321, 1410, 1291, 1456, 1295, 1462, 1319, 1509, 1339, 1515, 1369, 1509, 1377, 1541, 1422, 1405, 1422, 1404, 1400, 1402, 1367, 1391, 1368, 1394, 1387"
//             )}
//           />
//           <area
//             onClick={() => click("matei")}
//             shape="poly"
//             style={{ background: "rgba(0, 0, 0, 0.7)" }}
//             coords={getScaledCoords(
//               "1368, 1030, 1382, 1014, 1397, 986, 1431, 1006, 1437, 1036, 1433, 1064, 1406, 1094, 1381, 1082, 1385, 1059, 1380, 1033"
//             )}
//           />
//           <area
//             onClick={() => click("matei")}
//             shape="poly"
//             style={{ background: "rgba(0, 0, 0, 0.7)" }}
//             coords={getScaledCoords(
//               "1044, 1329, 1055, 1255, 1079, 1207, 1075, 1102, 1046, 1090, 1048, 1049, 1015, 1043, 1001, 1071, 1011, 1095, 979, 1093, 954, 1208, 985, 1331"
//             )}
//           />
//           <area
//             onClick={() => click("matei")}
//             shape="poly"
//             style={{ background: "rgba(0, 0, 0, 0.7)" }}
//             coords={getScaledCoords(
//               "1515, 994, 1493, 981, 1481, 953, 1449, 956, 1451, 988, 1445, 990, 1442, 1013, 1469, 1010, 1497, 1039"
//             )}
//           />
//         </map>
//       </div>
//     </div>
//   );
// }

// export default Level18;

// /*

// <img src="level18.jpg" id="map-image" style="width: 1897px; max-width: 100%; height: auto;" alt="" usemap="#map" />
// <map name="map">
//     <area onClick={()=>click("matei")} shape="poly" coords={getScaledCoords("1810, 1025, 1823, 1020, 1825, 1003, 1817, 990, 1842, 974, 1858, 979, 1870, 998, 1868, 1019, 1883, 1024, 1893, 1030, 1894, 1053, 1851, 1080, 1838, 1045, 1814, 1031" />
//     <area onClick={()=>click("matei")} shape="poly" coords={getScaledCoords("1767, 1029, 1746, 1049, 1749, 1071, 1755, 1087, 1771, 1082, 1812, 1121, 1842, 1081, 1834, 1051, 1805, 1034, 1812, 1003, 1796, 989, 1774, 998, 1766, 1020" />
//     <area onClick={()=>click("matei")} shape="poly" coords={getScaledCoords("1695, 1044, 1701, 1050, 1700, 1066, 1711, 1052, 1739, 1062, 1749, 1038, 1760, 1031, 1750, 994, 1717, 996" />
//     <area onClick={()=>click("matei")} shape="poly" coords={getScaledCoords("1702, 1088, 1708, 1105, 1715, 1119, 1726, 1127, 1733, 1114, 1737, 1098, 1749, 1088, 1752, 1079, 1725, 1059, 1711, 1059, 1701, 1075" />
//     <area onClick={()=>click("matei")} shape="poly" coords={getScaledCoords("1662, 1052, 1671, 1043, 1690, 1045, 1696, 1051, 1695, 1069, 1696, 1095, 1696, 1112, 1693, 1124, 1684, 1127, 1669, 1119, 1671, 1100, 1666, 1087, 1658, 1059" />
//     <area onClick={()=>click("matei")} shape="poly" coords={getScaledCoords("1800, 1159, 1811, 1140, 1817, 1127, 1838, 1117, 1855, 1083, 1875, 1068, 1890, 1062, 1895, 1077, 1891, 1140, 1893, 1165, 1894, 1404, 1772, 1412, 1801, 1287, 1793, 1237" />
//     <area onClick={()=>click("matei")} shape="poly" coords={getScaledCoords("1697, 1341, 1696, 1306, 1697, 1275, 1701, 1245, 1703, 1232, 1703, 1217, 1705, 1198, 1709, 1168, 1714, 1148, 1725, 1141, 1737, 1130, 1738, 1108, 1747, 1095, 1765, 1089, 1790, 1103, 1800, 1120, 1793, 1147, 1793, 1165, 1794, 1194, 1786, 1243, 1788, 1285, 1782, 1318, 1777, 1333, 1770, 1352, 1768, 1373, 1768, 1385, 1766, 1396, 1759, 1407, 1744, 1395, 1726, 1374, 1706, 1356, 1699, 1346" />
//     <area onClick={()=>click("matei")} shape="poly" coords={getScaledCoords("1590, 1418, 1589, 1399, 1597, 1384, 1596, 1363, 1603, 1336, 1588, 1311, 1612, 1293, 1625, 1300, 1637, 1307, 1646, 1324, 1660, 1340, 1680, 1354, 1705, 1368, 1733, 1390, 1746, 1404, 1746, 1423" />
//     <area onClick={()=>click("matei")} shape="poly" coords={getScaledCoords("1627, 1095, 1624, 1081, 1630, 1064, 1643, 1057, 1655, 1062, 1663, 1077, 1663, 1105, 1662, 1120, 1681, 1128, 1695, 1138, 1700, 1161, 1697, 1184, 1694, 1202, 1690, 1225, 1686, 1251, 1684, 1276, 1686, 1321, 1685, 1336, 1669, 1339, 1655, 1329, 1645, 1304, 1618, 1293, 1607, 1297, 1600, 1292, 1599, 1261, 1596, 1231, 1593, 1196, 1591, 1166, 1591, 1147, 1598, 1124, 1607, 1112, 1626, 1103" />
//     <area onClick={()=>click("matei")} shape="poly" coords={getScaledCoords("1528, 991, 1539, 987, 1542, 978, 1536, 968, 1542, 957, 1555, 951, 1569, 951, 1576, 956, 1574, 966, 1569, 978, 1572, 1003, 1573, 1011, 1568, 1022, 1554, 1017, 1546, 998, 1536, 993" />
//     <area onClick={()=>click("matei")} shape="poly" coords={getScaledCoords("1546, 1163, 1542, 1225, 1538, 1259, 1542, 1289, 1533, 1312, 1560, 1319, 1567, 1286, 1574, 1259, 1575, 1227, 1582, 1193, 1578, 1167, 1581, 1135, 1591, 1114, 1611, 1104, 1622, 1094, 1617, 1070, 1632, 1054, 1639, 1042, 1618, 1021, 1613, 1008, 1608, 977, 1595, 969, 1577, 972, 1576, 980, 1575, 997, 1578, 1020, 1576, 1026, 1567, 1033, 1567, 1060, 1568, 1078, 1568, 1096, 1566, 1117, 1562, 1136, 1558, 1151, 1550, 1160" />
//     <area onClick={()=>click("matei")} shape="poly" coords={getScaledCoords("1547, 1152, 1560, 1129, 1564, 1106, 1564, 1084, 1563, 1057, 1560, 1039, 1547, 1010, 1534, 999, 1527, 998, 1515, 1004, 1508, 1018, 1505, 1034, 1501, 1048, 1500, 1054, 1508, 1062, 1527, 1077, 1531, 1097, 1540, 1119, 1544, 1142" />
//     <area onClick={()=>click("matei")} shape="poly" coords={getScaledCoords("1419, 1284, 1425, 1256, 1419, 1221, 1417, 1198, 1415, 1182, 1413, 1170, 1412, 1159, 1413, 1139, 1411, 1119, 1412, 1103, 1419, 1091, 1431, 1076, 1440, 1066, 1442, 1052, 1447, 1032, 1454, 1021, 1460, 1020, 1474, 1024, 1482, 1030, 1493, 1041, 1494, 1055, 1498, 1063, 1515, 1076, 1528, 1099, 1535, 1123, 1535, 1146, 1523, 1175, 1513, 1199, 1513, 1225, 1513, 1250, 1510, 1275, 1508, 1303, 1506, 1324, 1498, 1328, 1475, 1315, 1466, 1294, 1453, 1280, 1431, 1283" />
//     <area onClick={()=>click("matei")} shape="poly" coords={getScaledCoords("1404, 984, 1405, 973, 1405, 962, 1413, 951, 1428, 949, 1433, 955, 1438, 969, 1440, 983, 1439, 996, 1436, 1001" />
//     <area onClick={()=>click("matei")} shape="poly" coords={getScaledCoords("1253, 1024, 1249, 1010, 1249, 993, 1255, 980, 1260, 967, 1267, 955, 1275, 948, 1288, 940, 1292, 935, 1291, 922, 1294, 911, 1308, 904, 1318, 903, 1325, 921, 1322, 932, 1338, 943, 1344, 949, 1334, 957, 1345, 968, 1345, 985, 1347, 1004, 1343, 1021, 1337, 1032, 1333, 1046, 1337, 1066, 1334, 1073, 1321, 1078, 1310, 1087, 1307, 1094, 1294, 1074, 1286, 1063, 1285, 1041, 1275, 1025, 1260, 1022" />
//     <area onClick={()=>click("matei")} shape="poly" coords={getScaledCoords("1313, 1098, 1323, 1086, 1339, 1079, 1347, 1077, 1340, 1057, 1340, 1038, 1357, 1027, 1370, 1034, 1379, 1044, 1381, 1058, 1374, 1075, 1374, 1084, 1392, 1091, 1400, 1098, 1405, 1128, 1404, 1160, 1403, 1200, 1411, 1226, 1402, 1261, 1405, 1280, 1400, 1295, 1387, 1311, 1365, 1323, 1359, 1323, 1352, 1291, 1347, 1256, 1336, 1236, 1324, 1204, 1323, 1183, 1320, 1163, 1320, 1141, 1319, 1119, 1316, 1107" />
//     <area onClick={()=>click("matei")} shape="poly" coords={getScaledCoords("1243, 1077, 1245, 1071, 1243, 1065, 1241, 1058, 1242, 1047, 1245, 1039, 1255, 1032, 1268, 1031, 1279, 1047, 1282, 1069, 1282, 1080, 1298, 1094, 1312, 1111, 1318, 1133, 1317, 1170, 1325, 1208, 1307, 1230, 1303, 1252, 1317, 1275, 1307, 1298, 1289, 1317, 1270, 1328, 1232, 1327, 1230, 1299, 1230, 1249, 1224, 1217, 1219, 1195, 1217, 1167, 1215, 1139, 1213, 1117, 1211, 1103, 1215, 1086, 1227, 1079, 1239, 1076" />
//     <area onClick={()=>click("matei")} shape="poly" coords={getScaledCoords("998, 1082, 994, 1050, 998, 1023, 997, 993, 1006, 972, 1022, 961, 1035, 953, 1041, 943, 1041, 925, 1045, 909, 1063, 904, 1078, 917, 1082, 936, 1078, 949, 1091, 957, 1102, 966, 1105, 988, 1111, 1026, 1115, 1042, 1116, 1060, 1116, 1075, 1111, 1090, 1098, 1100, 1089, 1105, 1076, 1093, 1063, 1087, 1048, 1073, 1055, 1051, 1044, 1036, 1021, 1035, 1006, 1041, 1003, 1056" />
//     <area onClick={()=>click("matei")} shape="poly" coords={getScaledCoords("852, 1023, 864, 1005, 872, 993, 880, 987, 886, 976, 885, 954, 902, 943, 912, 951, 922, 967, 926, 983, 945, 1005, 953, 1027, 958, 1041, 944, 1030, 934, 1025, 926, 1013, 916, 976, 893, 984, 884, 1028" />
//     <area onClick={()=>click("matei")} shape="poly" coords={getScaledCoords("887, 1037, 892, 1025, 890, 1013, 898, 985, 907, 982, 916, 987, 924, 1006, 922, 1022, 929, 1037, 947, 1043, 955, 1062, 961, 1092, 959, 1113, 963, 1137, 963, 1150, 954, 1165, 932, 1167, 932, 1158, 929, 1134, 928, 1113, 926, 1097, 912, 1082, 899, 1069, 888, 1056, 885, 1040, 884, 1035" />
//     <area onClick={()=>click("matei")} shape="poly" coords={getScaledCoords("840, 1075, 843, 1060, 841, 1043, 848, 1032, 867, 1029, 879, 1034, 880, 1058, 892, 1072, 909, 1085, 923, 1103, 927, 1133, 927, 1157, 921, 1178, 904, 1200, 914, 1221, 919, 1238, 920, 1270, 924, 1291, 924, 1312, 919, 1337, 897, 1336, 871, 1331, 849, 1331, 838, 1321, 838, 1294, 839, 1257, 838, 1236, 831, 1216, 827, 1193, 817, 1170, 813, 1144, 813, 1128, 817, 1108, 828, 1095, 837, 1086" />
//     <area onClick={()=>click("matei")} shape="poly" coords={getScaledCoords("765, 1003, 774, 990, 786, 992, 799, 1003, 802, 1025, 805, 1036, 819, 1044, 833, 1057, 831, 1078, 820, 1094, 810, 1095, 812, 1176, 829, 1239, 817, 1327, 781, 1325, 742, 1295, 742, 1176, 731, 1168, 740, 1144, 732, 1134, 740, 1094, 722, 1080, 710, 1057, 723, 1044, 724, 1024, 728, 1014" />
//     <area onClick={()=>click("matei")} shape="poly" coords={getScaledCoords("731, 972, 737, 962, 735, 943, 745, 930, 758, 926, 768, 933, 771, 950, 771, 966, 782, 972, 798, 981, 807, 999, 809, 1024, 805, 1029, 799, 988, 772, 987, 759, 1000, 739, 1006, 722, 1013, 719, 1040, 709, 1048, 705, 1052, 704, 1027, 707, 1004, 709, 992, 720, 983" />
//     <area onClick={()=>click("matei")} shape="poly" coords={getScaledCoords("627, 1030, 631, 995, 634, 970, 643, 952, 658, 943, 668, 936, 671, 915, 685, 894, 705, 904, 705, 922, 704, 938, 712, 944, 728, 952, 734, 961, 726, 975, 711, 985, 702, 1015, 702, 1033, 700, 1039, 686, 1015, 673, 1001, 658, 1004, 645, 1011, 648, 1026, 646, 1035, 641, 1046, 630, 1036" />
//     <area onClick={()=>click("matei")} shape="poly" coords={getScaledCoords("564, 949, 568, 938, 578, 930, 590, 940, 594, 952, 594, 969, 603, 979, 610, 992, 611, 1010, 616, 1026, 616, 1035, 606, 1028, 605, 1007, 595, 995, 582, 993, 576, 991, 568, 972" />
//     <area onClick={()=>click("matei")} shape="poly" coords={getScaledCoords("495, 951, 503, 943, 507, 935, 517, 928, 523, 930, 514, 913, 521, 899, 532, 893, 547, 898, 552, 911, 555, 920, 554, 929, 548, 944, 558, 954, 562, 962, 555, 972, 538, 954, 532, 974, 526, 991, 520, 1006, 513, 1019, 505, 1022, 503, 1004, 496, 995, 483, 983, 485, 966" />
//     <area onClick={()=>click("matei")} shape="poly" coords={getScaledCoords("448, 965, 450, 949, 458, 937, 466, 930, 481, 937, 489, 945, 489, 956, 479, 976, 476, 986, 486, 996, 497, 1004, 503, 1017, 496, 1032, 483, 1039, 472, 1046, 466, 1059, 458, 1070, 446, 1071, 429, 1067, 428, 1053, 434, 1039, 423, 1024, 401, 1015, 397, 1004, 412, 994, 429, 990, 441, 984, 449, 968" />
//     <area onClick={()=>click("matei")} shape="poly" coords={getScaledCoords("390, 965, 391, 955, 385, 938, 390, 921, 404, 914, 420, 915, 429, 922, 432, 940, 428, 951, 427, 962, 437, 966, 446, 970, 437, 981, 423, 984, 400, 990, 391, 1005, 387, 1017, 386, 1031, 376, 1042, 371, 1051, 368, 1064, 358, 1073, 356, 1064, 358, 1045, 355, 1031, 348, 1023, 347, 1016, 357, 1005, 372, 987, 379, 974, 386, 969" />
//     <area onClick={()=>click("matei")} shape="poly" coords={getScaledCoords("307, 970, 308, 923, 349, 930, 348, 968, 371, 980, 344, 1012" />
//     <area onClick={()=>click("matei")} shape="poly" coords={getScaledCoords("284, 1025, 285, 997, 305, 981, 319, 995, 327, 1017, 342, 1028, 353, 1044, 352, 1069, 334, 1081, 330, 1089, 331, 1126, 336, 1177, 338, 1202, 343, 1234, 336, 1269, 328, 1256, 324, 1219, 328, 1196, 319, 1170, 317, 1155, 326, 1136, 324, 1094, 307, 1072, 295, 1070, 286, 1037" />
//     <area onClick={()=>click("matei")} shape="poly" coords={getScaledCoords("209, 955, 230, 963, 234, 995, 244, 1006, 259, 1012, 257, 1029, 233, 1048, 210, 1044, 209, 1017, 196, 1000, 196, 988, 203, 977" />
//     <area onClick={()=>click("matei")} shape="poly" coords={getScaledCoords("95, 1004, 107, 996, 108, 969, 118, 955, 144, 953, 145, 973, 144, 996, 156, 1003, 163, 1005, 157, 1024, 157, 1033, 153, 1056, 144, 1053, 130, 1045, 116, 1033, 107, 1011, 102, 1001" />
//     <area onClick={()=>click("matei")} shape="poly" coords={getScaledCoords("170, 904, 192, 919, 191, 941, 189, 956, 205, 963, 190, 988, 172, 1000, 152, 997, 145, 978, 149, 960, 145, 944, 151, 933, 168, 919" />
//     <area onClick={()=>click("matei")} shape="poly" coords={getScaledCoords("47, 1026, 42, 962, 51, 939, 60, 910, 78, 892, 98, 890, 100, 874, 103, 850, 125, 840, 143, 854, 141, 874, 138, 895, 165, 902, 162, 915, 141, 931, 140, 939, 132, 948, 104, 948, 93, 979, 90, 996, 64, 1005" />
//     <area onClick={()=>click("matei")} shape="poly" coords={getScaledCoords("1, 1280, 34, 1265, 53, 1236, 55, 1218, 56, 1199, 42, 1171, 34, 1156, 23, 1129, 21, 1107, 27, 1088, 20, 1060, 9, 1057, 1, 1053, 2, 1284" />
//     <area onClick={()=>click("matei")} shape="poly" coords={getScaledCoords("131, 1278, 130, 1215, 129, 1185, 117, 1138, 111, 1113, 118, 1085, 131, 1069, 134, 1053, 106, 1044, 101, 1023, 86, 1006, 65, 1004, 55, 1013, 52, 1031, 51, 1052, 51, 1076, 39, 1098, 30, 1115, 46, 1155, 56, 1177, 65, 1209, 59, 1235, 50, 1255, 54, 1267, 86, 1273, 120, 1280" />
//     <area onClick={()=>click("matei")} shape="poly" coords={getScaledCoords("158, 1280, 152, 1241, 141, 1212, 136, 1193, 132, 1170, 126, 1146, 121, 1116, 124, 1101, 133, 1080, 153, 1067, 162, 1060, 168, 1043, 164, 1039, 161, 1024, 165, 1015, 181, 1003, 195, 1005, 206, 1017, 207, 1029, 202, 1044, 211, 1051, 231, 1054, 239, 1070, 233, 1088, 213, 1101, 207, 1113, 202, 1145, 202, 1172, 206, 1186, 207, 1199, 206, 1217, 203, 1242, 202, 1264, 202, 1280, 155, 1284" />
//     <area onClick={()=>click("matei")} shape="poly" coords={getScaledCoords("322, 1301, 319, 1227, 323, 1191, 308, 1160, 323, 1120, 311, 1088, 298, 1079, 288, 1061, 281, 1034, 263, 1029, 249, 1033, 240, 1051, 239, 1069, 242, 1089, 220, 1102, 206, 1167, 215, 1176, 218, 1201, 211, 1231, 211, 1251, 213, 1276, 218, 1295" />
//     <area onClick={()=>click("matei")} shape="poly" coords={getScaledCoords("345, 1207, 358, 1259, 355, 1307, 431, 1308, 440, 1239, 426, 1193, 443, 1182, 431, 1136, 443, 1077, 417, 1067, 428, 1038, 396, 1020, 378, 1049, 378, 1072, 336, 1088" />
//     <area onClick={()=>click("matei")} shape="poly" coords={getScaledCoords("495, 1034, 523, 1017, 542, 963, 567, 982, 564, 1001, 550, 1023, 558, 1038, 549, 1056, 534, 1081, 518, 1031" />
//     <area onClick={()=>click("matei")} shape="poly" coords={getScaledCoords("532, 1090, 525, 1080, 512, 1039, 483, 1042, 467, 1073, 447, 1082, 447, 1110, 438, 1144, 450, 1178, 436, 1203, 449, 1245, 442, 1310, 482, 1311, 516, 1273, 517, 1233, 537, 1191, 534, 1145, 515, 1124" />
//     <area onClick={()=>click("matei")} shape="poly" coords={getScaledCoords("649, 1068, 627, 1043, 604, 1036, 593, 997, 560, 1006, 568, 1048, 546, 1063, 526, 1125, 542, 1143, 536, 1176, 568, 1326, 583, 1324, 593, 1258, 576, 1237, 601, 1205, 593, 1176, 623, 1098" />
//     <area onClick={()=>click("matei")} shape="poly" coords={getScaledCoords("639, 1086, 626, 1109, 641, 1134, 620, 1110, 601, 1185, 606, 1206, 585, 1243, 599, 1255, 590, 1325, 673, 1324, 679, 1259, 684, 1185, 689, 1134, 664, 1098" />
//     <area onClick={()=>click("matei")} shape="poly" coords={getScaledCoords("651, 1081, 659, 1069, 646, 1051, 653, 1026, 653, 1012, 675, 1007, 679, 1024, 700, 1048, 711, 1068, 726, 1091, 722, 1124, 734, 1147, 719, 1189, 717, 1302, 682, 1314, 683, 1241, 690, 1198, 694, 1129, 676, 1091" />
//     <area onClick={()=>click("matei")} shape="poly" coords={getScaledCoords("1143, 1060, 1126, 1025, 1139, 972, 1163, 954, 1155, 922, 1186, 912, 1202, 935, 1193, 961, 1219, 977, 1235, 1013, 1227, 1026, 1227, 1039, 1196, 1088, 1167, 1034" />
//     <area onClick={()=>click("matei")} shape="poly" coords={getScaledCoords("1117, 1330, 1129, 1290, 1114, 1229, 1102, 1221, 1102, 1245, 1078, 1232, 1084, 1206, 1082, 1188, 1124, 1094, 1139, 1093, 1164, 1040, 1193, 1094, 1207, 1115, 1216, 1234, 1206, 1264, 1191, 1254, 1176, 1334" />
//     <area onClick={()=>click("matei")} shape="poly" coords={getScaledCoords("1372, 1393, 1357, 1363, 1363, 1337, 1401, 1321, 1410, 1291, 1456, 1295, 1462, 1319, 1509, 1339, 1515, 1369, 1509, 1377, 1541, 1422, 1405, 1422, 1404, 1400, 1402, 1367, 1391, 1368, 1394, 1387" />
//     <area onClick={()=>click("matei")} shape="poly" coords={getScaledCoords("1368, 1030, 1382, 1014, 1397, 986, 1431, 1006, 1437, 1036, 1433, 1064, 1406, 1094, 1381, 1082, 1385, 1059, 1380, 1033" />
//     <area onClick={()=>click("matei")} shape="poly" coords={getScaledCoords("1044, 1329, 1055, 1255, 1079, 1207, 1075, 1102, 1046, 1090, 1048, 1049, 1015, 1043, 1001, 1071, 1011, 1095, 979, 1093, 954, 1208, 985, 1331" />
//     <area onClick={()=>click("matei")} shape="poly" coords={getScaledCoords("1515, 994, 1493, 981, 1481, 953, 1449, 956, 1451, 988, 1445, 990, 1442, 1013, 1469, 1010, 1497, 1039" />
// </map>
// <script src="//ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js"></script>
// <script src="imageMapResizer.min.js"></script>
// <script>$(document).ready(function(e){$("map").imageMapResize();});</script>

//  */
// import React from "react";
// import "./level18.scss"; // PÄƒstrÄƒm importul CSS dacÄƒ existÄƒ stiluri generale aplicate div-ului exterior sau altundeva

// // ImportÄƒ imaginea - metoda poate varia Ã®n funcÈ›ie de configuraÈ›ia proiectului (ex: Webpack, Vite)
// // DacÄƒ require nu funcÈ›ioneazÄƒ, Ã®ncearcÄƒ import Image from "../../assets/img/level18.jpg";
// // È™i foloseÈ™te {Image} Ã®n href.
// const level18Image = require("../../assets/img/level18.jpg");

// function Level18() { // Am schimbat numele componentei pentru claritate
//   const handleClick = (nume) => { // Am pÄƒstrat funcÈ›ia click, eventual redenumitÄƒ
//     console.log(nume);
//     // PoÈ›i adÄƒuga aici logica specificÄƒ pentru fiecare zonÄƒ, dacÄƒ e necesar
//     // De exemplu, un switch pe 'nume'
//     if (nume === "ccccc") {
//         console.log("Ai dat click pe zona CCCCC!");
//     } else if (nume === "matei") {
//         console.log("Ai dat click pe zona Matei!");
//     }
//   };

//   // Coordonatele originale ale zonelor, fÄƒrÄƒ scalare prealabilÄƒ
//   // Convertim fiecare string de coordonate din formatul "x1,y1,x2,y2,..." la "x1,y1 x2,y2 ..."
//   const areaCoords = [
//     "1810, 1025, 1823, 1020, 1825, 1003, 1817, 990, 1842, 974, 1858, 979, 1870, 998, 1868, 1019, 1883, 1024, 1893, 1030, 1894, 1053, 1851, 1080, 1838, 1045, 1814, 1031",
//     "1767, 1029, 1746, 1049, 1749, 1071, 1755, 1087, 1771, 1082, 1812, 1121, 1842, 1081, 1834, 1051, 1805, 1034, 1812, 1003, 1796, 989, 1774, 998, 1766, 1020",
//     "1695, 1044, 1701, 1050, 1700, 1066, 1711, 1052, 1739, 1062, 1749, 1038, 1760, 1031, 1750, 994, 1717, 996",
//     "1702, 1088, 1708, 1105, 1715, 1119, 1726, 1127, 1733, 1114, 1737, 1098, 1749, 1088, 1752, 1079, 1725, 1059, 1711, 1059, 1701, 1075",
//     "1662, 1052, 1671, 1043, 1690, 1045, 1696, 1051, 1695, 1069, 1696, 1095, 1696, 1112, 1693, 1124, 1684, 1127, 1669, 1119, 1671, 1100, 1666, 1087, 1658, 1059",
//     "1800, 1159, 1811, 1140, 1817, 1127, 1838, 1117, 1855, 1083, 1875, 1068, 1890, 1062, 1895, 1077, 1891, 1140, 1893, 1165, 1894, 1404, 1772, 1412, 1801, 1287, 1793, 1237",
//     "1697, 1341, 1696, 1306, 1697, 1275, 1701, 1245, 1703, 1232, 1703, 1217, 1705, 1198, 1709, 1168, 1714, 1148, 1725, 1141, 1737, 1130, 1738, 1108, 1747, 1095, 1765, 1089, 1790, 1103, 1800, 1120, 1793, 1147, 1793, 1165, 1794, 1194, 1786, 1243, 1788, 1285, 1782, 1318, 1777, 1333, 1770, 1352, 1768, 1373, 1768, 1385, 1766, 1396, 1759, 1407, 1744, 1395, 1726, 1374, 1706, 1356, 1699, 1346",
//     "1590, 1418, 1589, 1399, 1597, 1384, 1596, 1363, 1603, 1336, 1588, 1311, 1612, 1293, 1625, 1300, 1637, 1307, 1646, 1324, 1660, 1340, 1680, 1354, 1705, 1368, 1733, 1390, 1746, 1404, 1746, 1423",
//     "1627, 1095, 1624, 1081, 1630, 1064, 1643, 1057, 1655, 1062, 1663, 1077, 1663, 1105, 1662, 1120, 1681, 1128, 1695, 1138, 1700, 1161, 1697, 1184, 1694, 1202, 1690, 1225, 1686, 1251, 1684, 1276, 1686, 1321, 1685, 1336, 1669, 1339, 1655, 1329, 1645, 1304, 1618, 1293, 1607, 1297, 1600, 1292, 1599, 1261, 1596, 1231, 1593, 1196, 1591, 1166, 1591, 1147, 1598, 1124, 1607, 1112, 1626, 1103",
//     "1528, 991, 1539, 987, 1542, 978, 1536, 968, 1542, 957, 1555, 951, 1569, 951, 1576, 956, 1574, 966, 1569, 978, 1572, 1003, 1573, 1011, 1568, 1022, 1554, 1017, 1546, 998, 1536, 993",
//     "1546, 1163, 1542, 1225, 1538, 1259, 1542, 1289, 1533, 1312, 1560, 1319, 1567, 1286, 1574, 1259, 1575, 1227, 1582, 1193, 1578, 1167, 1581, 1135, 1591, 1114, 1611, 1104, 1622, 1094, 1617, 1070, 1632, 1054, 1639, 1042, 1618, 1021, 1613, 1008, 1608, 977, 1595, 969, 1577, 972, 1576, 980, 1575, 997, 1578, 1020, 1576, 1026, 1567, 1033, 1567, 1060, 1568, 1078, 1568, 1096, 1566, 1117, 1562, 1136, 1558, 1151, 1550, 1160",
//     "1547, 1152, 1560, 1129, 1564, 1106, 1564, 1084, 1563, 1057, 1560, 1039, 1547, 1010, 1534, 999, 1527, 998, 1515, 1004, 1508, 1018, 1505, 1034, 1501, 1048, 1500, 1054, 1508, 1062, 1527, 1077, 1531, 1097, 1540, 1119, 1544, 1142",
//     "1419, 1284, 1425, 1256, 1419, 1221, 1417, 1198, 1415, 1182, 1413, 1170, 1412, 1159, 1413, 1139, 1411, 1119, 1412, 1103, 1419, 1091, 1431, 1076, 1440, 1066, 1442, 1052, 1447, 1032, 1454, 1021, 1460, 1020, 1474, 1024, 1482, 1030, 1493, 1041, 1494, 1055, 1498, 1063, 1515, 1076, 1528, 1099, 1535, 1123, 1535, 1146, 1523, 1175, 1513, 1199, 1513, 1225, 1513, 1250, 1510, 1275, 1508, 1303, 1506, 1324, 1498, 1328, 1475, 1315, 1466, 1294, 1453, 1280, 1431, 1283",
//     "1404, 984, 1405, 973, 1405, 962, 1413, 951, 1428, 949, 1433, 955, 1438, 969, 1440, 983, 1439, 996, 1436, 1001",
//     "1253, 1024, 1249, 1010, 1249, 993, 1255, 980, 1260, 967, 1267, 955, 1275, 948, 1288, 940, 1292, 935, 1291, 922, 1294, 911, 1308, 904, 1318, 903, 1325, 921, 1322, 932, 1338, 943, 1344, 949, 1334, 957, 1345, 968, 1345, 985, 1347, 1004, 1343, 1021, 1337, 1032, 1333, 1046, 1337, 1066, 1334, 1073, 1321, 1078, 1310, 1087, 1307, 1094, 1294, 1074, 1286, 1063, 1285, 1041, 1275, 1025, 1260, 1022",
//     "1313, 1098, 1323, 1086, 1339, 1079, 1347, 1077, 1340, 1057, 1340, 1038, 1357, 1027, 1370, 1034, 1379, 1044, 1381, 1058, 1374, 1075, 1374, 1084, 1392, 1091, 1400, 1098, 1405, 1128, 1404, 1160, 1403, 1200, 1411, 1226, 1402, 1261, 1405, 1280, 1400, 1295, 1387, 1311, 1365, 1323, 1359, 1323, 1352, 1291, 1347, 1256, 1336, 1236, 1324, 1204, 1323, 1183, 1320, 1163, 1320, 1141, 1319, 1119, 1316, 1107",
//     "1243, 1077, 1245, 1071, 1243, 1065, 1241, 1058, 1242, 1047, 1245, 1039, 1255, 1032, 1268, 1031, 1279, 1047, 1282, 1069, 1282, 1080, 1298, 1094, 1312, 1111, 1318, 1133, 1317, 1170, 1325, 1208, 1307, 1230, 1303, 1252, 1317, 1275, 1307, 1298, 1289, 1317, 1270, 1328, 1232, 1327, 1230, 1299, 1230, 1249, 1224, 1217, 1219, 1195, 1217, 1167, 1215, 1139, 1213, 1117, 1211, 1103, 1215, 1086, 1227, 1079, 1239, 1076",
//     "998, 1082, 994, 1050, 998, 1023, 997, 993, 1006, 972, 1022, 961, 1035, 953, 1041, 943, 1041, 925, 1045, 909, 1063, 904, 1078, 917, 1082, 936, 1078, 949, 1091, 957, 1102, 966, 1105, 988, 1111, 1026, 1115, 1042, 1116, 1060, 1116, 1075, 1111, 1090, 1098, 1100, 1089, 1105, 1076, 1093, 1063, 1087, 1048, 1073, 1055, 1051, 1044, 1036, 1021, 1035, 1006, 1041, 1003, 1056",
//     "852, 1023, 864, 1005, 872, 993, 880, 987, 886, 976, 885, 954, 902, 943, 912, 951, 922, 967, 926, 983, 945, 1005, 953, 1027, 958, 1041, 944, 1030, 934, 1025, 926, 1013, 916, 976, 893, 984, 884, 1028",
//     "887, 1037, 892, 1025, 890, 1013, 898, 985, 907, 982, 916, 987, 924, 1006, 922, 1022, 929, 1037, 947, 1043, 955, 1062, 961, 1092, 959, 1113, 963, 1137, 963, 1150, 954, 1165, 932, 1167, 932, 1158, 929, 1134, 928, 1113, 926, 1097, 912, 1082, 899, 1069, 888, 1056, 885, 1040, 884, 1035",
//     "840, 1075, 843, 1060, 841, 1043, 848, 1032, 867, 1029, 879, 1034, 880, 1058, 892, 1072, 909, 1085, 923, 1103, 927, 1133, 927, 1157, 921, 1178, 904, 1200, 914, 1221, 919, 1238, 920, 1270, 924, 1291, 924, 1312, 919, 1337, 897, 1336, 871, 1331, 849, 1331, 838, 1321, 838, 1294, 839, 1257, 838, 1236, 831, 1216, 827, 1193, 817, 1170, 813, 1144, 813, 1128, 817, 1108, 828, 1095, 837, 1086",
//     "765, 1003, 774, 990, 786, 992, 799, 1003, 802, 1025, 805, 1036, 819, 1044, 833, 1057, 831, 1078, 820, 1094, 810, 1095, 812, 1176, 829, 1239, 817, 1327, 781, 1325, 742, 1295, 742, 1176, 731, 1168, 740, 1144, 732, 1134, 740, 1094, 722, 1080, 710, 1057, 723, 1044, 724, 1024, 728, 1014",
//     "731, 972, 737, 962, 735, 943, 745, 930, 758, 926, 768, 933, 771, 950, 771, 966, 782, 972, 798, 981, 807, 999, 809, 1024, 805, 1029, 799, 988, 772, 987, 759, 1000, 739, 1006, 722, 1013, 719, 1040, 709, 1048, 705, 1052, 704, 1027, 707, 1004, 709, 992, 720, 983",
//     "627, 1030, 631, 995, 634, 970, 643, 952, 658, 943, 668, 936, 671, 915, 685, 894, 705, 904, 705, 922, 704, 938, 712, 944, 728, 952, 734, 961, 726, 975, 711, 985, 702, 1015, 702, 1033, 700, 1039, 686, 1015, 673, 1001, 658, 1004, 645, 1011, 648, 1026, 646, 1035, 641, 1046, 630, 1036",
//     "564, 949, 568, 938, 578, 930, 590, 940, 594, 952, 594, 969, 603, 979, 610, 992, 611, 1010, 616, 1026, 616, 1035, 606, 1028, 605, 1007, 595, 995, 582, 993, 576, 991, 568, 972",
//     "495, 951, 503, 943, 507, 935, 517, 928, 523, 930, 514, 913, 521, 899, 532, 893, 547, 898, 552, 911, 555, 920, 554, 929, 548, 944, 558, 954, 562, 962, 555, 972, 538, 954, 532, 974, 526, 991, 520, 1006, 513, 1019, 505, 1022, 503, 1004, 496, 995, 483, 983, 485, 966",
//     "448, 965, 450, 949, 458, 937, 466, 930, 481, 937, 489, 945, 489, 956, 479, 976, 476, 986, 486, 996, 497, 1004, 503, 1017, 496, 1032, 483, 1039, 472, 1046, 466, 1059, 458, 1070, 446, 1071, 429, 1067, 428, 1053, 434, 1039, 423, 1024, 401, 1015, 397, 1004, 412, 994, 429, 990, 441, 984, 449, 968",
//     "390, 965, 391, 955, 385, 938, 390, 921, 404, 914, 420, 915, 429, 922, 432, 940, 428, 951, 427, 962, 437, 966, 446, 970, 437, 981, 423, 984, 400, 990, 391, 1005, 387, 1017, 386, 1031, 376, 1042, 371, 1051, 368, 1064, 358, 1073, 356, 1064, 358, 1045, 355, 1031, 348, 1023, 347, 1016, 357, 1005, 372, 987, 379, 974, 386, 969",
//     "307, 970, 308, 923, 349, 930, 348, 968, 371, 980, 344, 1012",
//     "284, 1025, 285, 997, 305, 981, 319, 995, 327, 1017, 342, 1028, 353, 1044, 352, 1069, 334, 1081, 330, 1089, 331, 1126, 336, 1177, 338, 1202, 343, 1234, 336, 1269, 328, 1256, 324, 1219, 328, 1196, 319, 1170, 317, 1155, 326, 1136, 324, 1094, 307, 1072, 295, 1070, 286, 1037",
//     "209, 955, 230, 963, 234, 995, 244, 1006, 259, 1012, 257, 1029, 233, 1048, 210, 1044, 209, 1017, 196, 1000, 196, 988, 203, 977",
//     "95, 1004, 107, 996, 108, 969, 118, 955, 144, 953, 145, 973, 144, 996, 156, 1003, 163, 1005, 157, 1024, 157, 1033, 153, 1056, 144, 1053, 130, 1045, 116, 1033, 107, 1011, 102, 1001",
//     "170, 904, 192, 919, 191, 941, 189, 956, 205, 963, 190, 988, 172, 1000, 152, 997, 145, 978, 149, 960, 145, 944, 151, 933, 168, 919",
//     "47, 1026, 42, 962, 51, 939, 60, 910, 78, 892, 98, 890, 100, 874, 103, 850, 125, 840, 143, 854, 141, 874, 138, 895, 165, 902, 162, 915, 141, 931, 140, 939, 132, 948, 104, 948, 93, 979, 90, 996, 64, 1005",
//     "1, 1280, 34, 1265, 53, 1236, 55, 1218, 56, 1199, 42, 1171, 34, 1156, 23, 1129, 21, 1107, 27, 1088, 20, 1060, 9, 1057, 1, 1053, 2, 1284",
//     "131, 1278, 130, 1215, 129, 1185, 117, 1138, 111, 1113, 118, 1085, 131, 1069, 134, 1053, 106, 1044, 101, 1023, 86, 1006, 65, 1004, 55, 1013, 52, 1031, 51, 1052, 51, 1076, 39, 1098, 30, 1115, 46, 1155, 56, 1177, 65, 1209, 59, 1235, 50, 1255, 54, 1267, 86, 1273, 120, 1280",
//     "158, 1280, 152, 1241, 141, 1212, 136, 1193, 132, 1170, 126, 1146, 121, 1116, 124, 1101, 133, 1080, 153, 1067, 162, 1060, 168, 1043, 164, 1039, 161, 1024, 165, 1015, 181, 1003, 195, 1005, 206, 1017, 207, 1029, 202, 1044, 211, 1051, 231, 1054, 239, 1070, 233, 1088, 213, 1101, 207, 1113, 202, 1145, 202, 1172, 206, 1186, 207, 1199, 206, 1217, 203, 1242, 202, 1264, 202, 1280, 155, 1284",
//     "322, 1301, 319, 1227, 323, 1191, 308, 1160, 323, 1120, 311, 1088, 298, 1079, 288, 1061, 281, 1034, 263, 1029, 249, 1033, 240, 1051, 239, 1069, 242, 1089, 220, 1102, 206, 1167, 215, 1176, 218, 1201, 211, 1231, 211, 1251, 213, 1276, 218, 1295",
//     "345, 1207, 358, 1259, 355, 1307, 431, 1308, 440, 1239, 426, 1193, 443, 1182, 431, 1136, 443, 1077, 417, 1067, 428, 1038, 396, 1020, 378, 1049, 378, 1072, 336, 1088",
//     "495, 1034, 523, 1017, 542, 963, 567, 982, 564, 1001, 550, 1023, 558, 1038, 549, 1056, 534, 1081, 518, 1031",
//     "532, 1090, 525, 1080, 512, 1039, 483, 1042, 467, 1073, 447, 1082, 447, 1110, 438, 1144, 450, 1178, 436, 1203, 449, 1245, 442, 1310, 482, 1311, 516, 1273, 517, 1233, 537, 1191, 534, 1145, 515, 1124",
//     "649, 1068, 627, 1043, 604, 1036, 593, 997, 560, 1006, 568, 1048, 546, 1063, 526, 1125, 542, 1143, 536, 1176, 568, 1326, 583, 1324, 593, 1258, 576, 1237, 601, 1205, 593, 1176, 623, 1098",
//     "639, 1086, 626, 1109, 641, 1134, 620, 1110, 601, 1185, 606, 1206, 585, 1243, 599, 1255, 590, 1325, 673, 1324, 679, 1259, 684, 1185, 689, 1134, 664, 1098",
//     "651, 1081, 659, 1069, 646, 1051, 653, 1026, 653, 1012, 675, 1007, 679, 1024, 700, 1048, 711, 1068, 726, 1091, 722, 1124, 734, 1147, 719, 1189, 717, 1302, 682, 1314, 683, 1241, 690, 1198, 694, 1129, 676, 1091",
//     "1143, 1060, 1126, 1025, 1139, 972, 1163, 954, 1155, 922, 1186, 912, 1202, 935, 1193, 961, 1219, 977, 1235, 1013, 1227, 1026, 1227, 1039, 1196, 1088, 1167, 1034",
//     "1117, 1330, 1129, 1290, 1114, 1229, 1102, 1221, 1102, 1245, 1078, 1232, 1084, 1206, 1082, 1188, 1124, 1094, 1139, 1093, 1164, 1040, 1193, 1094, 1207, 1115, 1216, 1234, 1206, 1264, 1191, 1254, 1176, 1334",
//     "1372, 1393, 1357, 1363, 1363, 1337, 1401, 1321, 1410, 1291, 1456, 1295, 1462, 1319, 1509, 1339, 1515, 1369, 1509, 1377, 1541, 1422, 1405, 1422, 1404, 1400, 1402, 1367, 1391, 1368, 1394, 1387",
//     "1368, 1030, 1382, 1014, 1397, 986, 1431, 1006, 1437, 1036, 1433, 1064, 1406, 1094, 1381, 1082, 1385, 1059, 1380, 1033",
//     "1044, 1329, 1055, 1255, 1079, 1207, 1075, 1102, 1046, 1090, 1048, 1049, 1015, 1043, 1001, 1071, 1011, 1095, 979, 1093, 954, 1208, 985, 1331",
//     "1515, 994, 1493, 981, 1481, 953, 1449, 956, 1451, 988, 1445, 990, 1442, 1013, 1469, 1010, 1497, 1039",
//   ];

//   // FuncÈ›ie ajutÄƒtoare pentru a transforma stringul de coordonate pentru formatul SVG points
//   const formatCoordsForSvg = (coordsString) => {
//     // ÃŽnlocuieÈ™te fiecare pereche ", " cu un spaÈ›iu.
//     // AsigurÄƒ-te cÄƒ nu afecteazÄƒ perechile "x,y" interne.
//     // O metodÄƒ mai sigurÄƒ este sÄƒ Ã®mparÈ›i dupÄƒ virgulÄƒ, grupezi cÃ¢te 2, È™i apoi sÄƒ le uneÈ™ti.
//      return coordsString
//       .split(',') // ÃŽmparte dupÄƒ virgulÄƒ
//       .map(coord => coord.trim()) // EliminÄƒ spaÈ›iile albe din jur
//       .reduce((acc, coord, index, arr) => {
//         // GrupeazÄƒ coordonatele Ã®n perechi [x, y]
//         if (index % 2 === 0) {
//           acc.push(`${coord},${arr[index + 1]}`);
//         }
//         return acc;
//       }, [])
//       .join(' '); // UneÈ™te perechile cu spaÈ›iu
//   };

//   // Dimensiunile originale ale imaginii, inferate din coordonate
//   const ratio = 1920 / 1440; // Raportul de aspect original
//   const originalWidth = 1920; // AjusteazÄƒ dacÄƒ dimensiunile reale sunt altele
//   const originalHeight = 1440; // AjusteazÄƒ dacÄƒ dimensiunile reale sunt altele

//   console.log(1920 / 1440)
//   return (
//     <div className="nebunie" style={{ width: "100%", height: "auto" }}> {/* PÄƒstrÄƒm div-ul exterior È™i clasa */}
//       <svg
//         viewBox={`0 0 ${originalWidth} ${originalHeight}`} // SeteazÄƒ viewBox la dimensiunile originale
//         style={{ width: "100%", height: "auto", display: "block" }} // Permite SVG-ului sÄƒ se scaleze
//         xmlns="http://www.w3.org/2000/svg"
//       >
//         <image
//           href={level18Image} // FoloseÈ™te imaginea importatÄƒ
//           x="-9"
//           y="-10"
//           width={originalWidth} // SeteazÄƒ lÄƒÈ›imea imaginii la dimensiunea originalÄƒ
//           height={originalHeight} // SeteazÄƒ Ã®nÄƒlÈ›imea imaginii la dimensiunea originalÄƒ
//           preserveAspectRatio="xMidYMid meet" // ScaleazÄƒ imaginea menÈ›inÃ¢nd raportul de aspect
//         />

//         {/* MapeazÄƒ coordonatele È™i creeazÄƒ elemente <polygon> */}
//         {areaCoords.map((coords, index) => (
//           <polygon
//             key={index} // FoloseÈ™te un key unic
//             points={formatCoordsForSvg(coords)} // FormateazÄƒ coordonatele pentru SVG
//             fill="transparent" // Zonele sunt invizibile ca Ã®n codul original
//             // AdaugÄƒ stroke doar pentru a vizualiza zonele Ã®n timpul dezvoltÄƒrii
//             stroke="rgba(255, 0, 0, 0.5)"
//             strokeWidth="2"
//             onClick={() => handleClick(index === 0 ? "ccccc" : "matei")} // PÄƒstreazÄƒ logica click
//             style={{ cursor: "pointer" }} // AratÄƒ cursorul ca o mÃ¢nÄƒ la hover
//           />
//         ))}
//       </svg>
//     </div>
//   );
// }

// // export default Level18; // ComenteazÄƒ sau È™terge exportul original
// export default Level18; // ExportÄƒ noua componentÄƒ

import React, { useEffect, useRef, useState } from "react";
import "./level18.scss";
import { getLevel, to, updateLevel } from "../../utils/stuff";
import { getHint, startLevel } from "../../utils/points";
import Poveste from "../../Pages/Poveste";
const level18Image = require("../../assets/img/level18.jpg");

function Level18({ uid, loading_comp }) {
  const [posi, setPosi] = useState([
    "Oprea Mihnea",
    "Baicu Vlad",
    "FÃ¢cÄƒ Cosmin",
    "Stanciu È˜tefan",
    "Dumitrache Mihnea",
    "BÄƒjenaru Matei",
    "Seinu IonuÈ›",
    "ZÄƒrnoeanu Cristian",
    "EncunÄƒ Izabel",
    "Marinescu Mihai",
    "Burloiu Vlad",
    "CiucÄƒ Andrei",
    "Ciobanu Alexandru",
    "È˜chiopu Bogdan",
    "PeÈ›a Bianca",
    "Mutu Denisa",
    "Dima Alexandru",
    "IoniÈ›Äƒ Maria",
    "NegrilÄƒ Gabriel",
    "Radu Valentin",
    "BÄƒtrÃ¢nac Teodor",
    "Ionescu Alexandru",
    "Sima Valentina",
    "Conciu Eduard",
    "DÄƒnilÄƒ Daniela",
    "Gherghe È˜tefan",
    "Oprea Lucian",
    "Gheorghe Iulian",
    "Marcu Silviu",
    "Lupu Robertino",
    "Grigore Alecsandru",
    "IoniÈ›Äƒ Denisa",
    "Ene Maria",
    "TudoricÄƒ Alexandru",
    "Petcu Ana Maria",
    "CiucÄƒ È˜tefania",
    "Zaharia IonuÈ›",
    "NaÈ™u Teodor",
    "StÄƒnescu Monica",
    "AciobÄƒniÈ›ei Radu-Ioan",
    "RÄƒiculescu Alexandru",
    "Hanga Mihail",
    "DrÄƒguÈ›u Matei",
    "Apostol DragoÈ™",
    "Matei Raul",
    "Nedelcu Maria",
    "Ionescu Alexandra",
    "Burtoiu Ana",
    "Tudose Georgiana",
  ]);

  const polygonData = [
    {
      title: "Dima Alexandru",
      points:
        "1050.26 556.247 1050.26 466.781 1032.75 365.645 1054.15 303.407 1081.38 289.793 1089.15 245.06 1122.22 254.784 1126.11 291.738 1151.39 311.187 1170.84 373.424 1161.12 443.442 1145.56 476.505 1130 564.027",
    },
    {
      title: "AciobÄƒniÈ›ei Radu-Ioan",
      points:
        "1118.33 147.814 1122.22 101.136 1157.23 97.246 1159.17 149.759 1190.29 169.208 1201.96 303.407 1155.28 318.967 1130 283.958 1120.27 247.005 1079.43 243.115 1079.43 167.263",
    },
    {
      title: "Radu Valentin",
      points:
        "1233.08 264.509 1213.63 227.556 1221.41 167.263 1254.47 157.538 1246.69 118.64 1271.98 108.915 1293.37 124.475 1291.43 159.483 1312.82 175.043 1334.21 225.611 1287.54 303.407 1270.03 243.115",
    },
    {
      title: "BÄƒtrÃ¢nac Teodor",
      points:
        "1384.78 134.199 1396.45 95.301 1429.52 97.246 1433.41 132.255 1456.74 151.704 1450.91 237.28 1408.12 309.242 1380.89 229.5 1341.99 221.721 1353.66 157.538",
    },
    {
      title: "Ionescu Alexandru",
      points:
        "1505.37 182.822 1518.98 141.979 1561.77 149.759 1559.83 202.272 1532.6 198.382",
    },
    {
      title: "Conciu Eduard",
      points:
        "1637.62 202.272 1608.45 184.767 1604.56 151.704 1569.55 157.538 1565.66 208.106 1616.23 223.666",
    },
    {
      title: "DÄƒnilÄƒ Daniela",
      points:
        "1672.63 258.674 1672.63 210.051 1643.46 196.437 1616.23 239.225 1612.34 274.234 1659.02 297.573 1670.69 340.361 1686.24 299.518",
    },
    {
      title: "Lupu Robertino",
      points: "1678.47 130.31 1709.58 159.483 1682.36 221.721 1643.46 167.263",
    },
    {
      title: "Gheorghe Iulian",
      points:
        "1740.7 173.098 1750.43 231.445 1771.82 258.674 1697.91 352.03 1676.52 256.729 1707.64 165.318",
    },
    {
      title: "Oprea Lucian",
      points:
        "1707.64 352.03 1707.64 439.552 1703.75 548.467 1752.37 509.569 1822.39 560.137 1832.11 334.526 1799.05 317.022 1793.22 260.619 1750.43 278.123",
    },
    {
      title: "IoniÈ›Äƒ Denisa",
      points: "1795.16 250.895 1837.95 252.84 1832.11 320.912 1799.05 313.132",
    },
    {
      title: "Petcu Ana",
      points: "1841.84 208.106 1884.63 192.547 1902.13 239.225 1841.84 287.848",
    },
    {
      title: "Ene Maria",
      points:
        "1894.35 272.289 1880.74 334.526 1837.95 367.59 1837.95 297.573 1865.18 266.454",
    },
    {
      title: "CiucÄƒ È˜tefania",
      points:
        "1952.7 243.115 1985.76 272.289 1972.15 326.746 1892.41 305.352 1896.3 260.619 1907.97 206.161 1939.08 186.712 1962.42 211.996",
    },
    {
      title: "Zaharia IonuÈ›",
      points:
        "1989.65 258.674 1962.42 237.28 1968.26 211.996 1964.37 176.988 2014.94 171.153 2018.83 225.611 2042.17 235.335 2044.11 282.013 2014.94 266.454 2005.21 283.958 1983.82 283.958",
    },
    {
      title: "RÄƒiculescu Alexandru",
      points:
        "1939.08 377.314 1956.59 344.251 1989.65 326.746 2018.83 278.123 2049.94 280.068 2048 635.989 1995.49 637.934 1942.97 527.073",
    },
    {
      title: "StÄƒnescu Monica",
      points:
        "1834.06 501.789 1828.22 571.806 1867.12 616.539 1923.53 643.768 1939.08 525.128 1935.19 355.92 1923.53 320.912 1890.46 311.187 1872.96 350.085 1837.95 371.48",
    },
    {
      title: "Grigore Alecsandru",
      points:
        "1701.8 659.328 1709.58 599.035 1734.87 599.035 1703.75 554.302 1750.43 515.404 1810.72 556.247 1900.19 655.438",
    },
    {
      title: "Marcu Silviu",
      points:
        "1657.07 661.273 1629.84 600.98 1622.06 556.247 1577.33 536.798 1557.88 513.459 1507.31 517.349 1505.37 554.302 1464.52 575.696 1482.03 634.044 1515.09 600.98 1511.2 659.328",
    },
    {
      title: "Gherghe È˜tefan",
      points:
        "1635.68 546.522 1651.24 416.213 1666.8 348.141 1655.13 299.518 1608.45 276.179 1614.28 227.556 1579.27 211.996 1552.05 233.39 1561.77 270.344 1520.93 280.068 1513.15 355.92 1534.54 408.433 1526.76 509.569 1579.27 505.679 1596.78 529.018",
    },
    {
      title: "Sima Valentina",
      points:
        "1515.09 305.352 1515.09 278.123 1555.94 268.399 1555.94 210.051 1505.37 190.602 1480.08 215.886 1493.7 247.005 1485.92 283.958",
    },
    {
      title: "NaÈ™u Teodor",
      points:
        "1412.01 330.636 1427.57 367.59 1429.52 437.607 1460.63 540.688 1468.41 562.082 1505.37 552.357 1503.42 507.624 1513.15 484.285 1518.98 396.764 1507.31 363.7 1513.15 309.242 1480.08 278.123 1495.64 245.06 1458.69 231.445",
    },
    {
      title: "NegrilÄƒ Gabriel",
      points:
        "1330.32 274.234 1303.1 313.132 1312.82 441.497 1310.88 515.404 1341.99 565.971 1388.67 556.247 1419.79 523.183 1413.96 459.001 1421.74 375.369 1402.29 315.077 1380.89 233.39 1338.1 231.445",
    },
    {
      title: "IoniÈ›Äƒ Maria",
      points:
        "1186.4 352.03 1211.68 309.242 1244.75 305.352 1231.13 270.344 1268.09 252.84 1285.59 311.187 1301.15 332.581 1308.93 480.395 1277.81 492.065 1264.2 554.302 1207.79 560.137 1209.74 449.276 1168.9 472.615 1168.9 412.323",
    },
    {
      title: "Hanga Mihail",
      points:
        "1003.58 562.082 993.854 437.607 988.019 398.708 1007.47 377.314 986.074 293.683 949.121 270.344 945.231 229.5 902.443 229.5 906.332 283.958 877.159 311.187 873.269 396.764 888.828 435.662 910.222 554.302",
    },
    // {
    //   title: "Diaconu Andrei",
    //   points:
    //     "960.79 237.28 953.01 198.382 970.515 182.822 997.744 196.437 995.799 239.225 1028.86 250.895 1034.7 334.526 1019.14 387.039 997.744 320.912 982.184 285.903 951.066 270.344",
    // },
    {
      title: "DrÄƒguÈ›u Matei",
      points:
        "962.735 141.979 989.964 143.924 991.909 175.043 1017.19 206.161 1024.97 241.17 1007.47 233.39 1003.58 198.382 968.57 176.988 943.286 196.437 954.955 237.28 943.286 223.666 927.727 225.611 925.782 180.877",
    },
    {
      title: "Apostol DragoÈ™",
      points:
        "836.315 167.263 830.481 122.53 797.417 122.53 789.637 151.704 787.692 175.043 756.574 194.492 756.574 262.564 777.968 223.666 812.976 206.161 838.26 184.767 863.544 184.767",
    },
    {
      title: "TudoricÄƒ Alexandru",
      points:
        "869.379 198.382 873.269 235.335 900.498 266.454 869.379 313.132 867.434 400.653 882.993 443.442 884.938 546.522 844.095 552.357 826.591 529.018 793.527 523.183 785.747 422.047 789.637 350.085 795.472 301.462 764.353 274.234 783.802 227.556 844.095 188.657",
    },
    {
      title: "Mutu Denisa",
      points:
        "709.896 301.462 727.4 320.912 752.684 361.755 744.904 464.836 723.51 552.357 624.319 538.743 645.713 468.726 630.154 460.946 649.603 414.268 655.438 355.92 678.777 299.518 680.722 297.573",
    },
    {
      title: "Matei Raul",
      points:
        "748.794 87.5214 770.188 114.75 768.243 143.924 787.692 155.594 783.802 175.043 746.849 196.437 754.629 254.784 735.18 208.106 684.612 231.445 663.217 211.996 706.006 132.255 715.73 101.136",
    },
    {
      title: "Nedelcu Maria",
      points:
        "704.061 283.958 702.116 229.5 731.29 217.831 752.684 262.564 779.913 297.573 783.802 344.251 781.858 431.772 772.133 523.183 744.904 529.018 754.629 352.03",
    },
    {
      title: "Ionescu Alexandra",
      points:
        "616.539 540.688 577.641 400.653 573.751 299.518 591.255 264.509 620.429 250.895 599.035 208.106 643.768 190.602 657.383 225.611 694.336 254.784 672.942 289.793 622.374 462.891 637.934 476.505",
    },
    {
      title: "Tudose Georgiana",
      points:
        "532.908 243.115 556.247 215.886 569.861 171.153 610.705 165.318 610.705 196.437 593.2 210.051 614.594 250.895 571.806 266.454",
    },
    {
      title: "PeÈ›a Bianca",
      points:
        "614.594 165.318 620.429 190.602 661.273 186.712 645.713 165.318 643.768 132.255 608.76 126.42 599.035 149.759 608.76 153.649",
    },
    {
      title: "Burtoiu Ana",
      points:
        "480.395 293.683 529.018 250.895 558.192 262.564 562.082 289.793 579.586 423.992 550.412 486.23 488.175 538.743 472.615 388.984",
    },
    {
      title: "Burloiu Vlad",
      points:
        "367.59 301.462 375.369 377.314 369.535 435.662 383.149 523.183 470.67 534.853 466.781 468.726 476.505 429.827 464.836 369.535 480.395 289.793 449.276 283.958 462.891 237.28 416.213 233.39 410.378 282.013",
    },
    {
      title: "CiucÄƒ Andrei",
      points:
        "427.882 202.272 480.395 176.988 494.009 130.31 519.293 130.31 529.018 153.649 515.404 188.657 540.688 210.051 534.853 233.39 490.12 280.068 464.836 274.234 466.781 233.39 431.772 227.556",
    },
    {
      title: "Ciobanu Alexandru",
      points:
        "373.424 243.115 379.259 196.437 418.158 163.373 418.158 118.64 451.221 106.971 466.781 132.255 457.056 165.318 476.505 175.043 425.937 196.437 422.047 225.611 402.598 231.445 408.433 274.234 373.424 282.013",
    },
    {
      title: "EncunÄƒ Izabel",
      points:
        "305.352 237.28 311.187 196.437 340.361 182.822 353.975 210.051 350.085 239.225 365.645 262.564 363.7 299.518 320.912 285.903",
    },
    {
      title: "ZÄƒrnoeanu Cristian",
      points:
        "328.691 169.208 322.857 122.53 365.645 118.64 390.929 173.098 365.645 235.335 357.865 194.492",
    },
    {
      title: "Seinu IonuÈ›",
      points:
        "225.611 223.666 223.666 252.84 260.619 264.509 268.399 215.886 248.95 155.594 219.776 149.759 202.272 176.988 213.941 208.106 221.721 210.051",
    },
    {
      title: "Marinescu Mihai",
      points:
        "215.886 383.149 225.611 315.077 258.674 299.518 260.619 274.234 270.344 231.445 295.628 227.556 309.242 272.289 317.022 303.407 344.251 305.352 330.636 388.984 350.085 517.349 227.556 507.624 237.28 398.708",
    },
    {
      title: "Dumitrache Mihnea",
      points:
        "44.7331 237.28 44.7331 159.483 64.1823 87.5214 105.026 79.7417 99.1909 35.0085 124.475 29.1738 157.538 35.0085 145.869 85.5764 184.767 93.3561 153.649 114.75 114.75 147.814 110.86 198.382",
    },
    {
      title: "Stanciu È˜tefan",
      points:
        "163.373 196.437 163.373 155.594 147.814 130.31 184.767 99.1909 213.941 124.475 204.217 155.594 198.382 190.602 180.877 196.437 167.263 196.437",
    },
    {
      title: "Oprea Mihnea",
      points:
        "64.1823 425.937 21.3941 326.746 36.9535 297.573 29.1738 270.344 -5.83476 254.784 1.94492 497.899 54.4577 490.12",
    },
    {
      title: "Baicu Vlad",
      points:
        "141.979 282.013 112.805 268.399 105.026 215.886 73.9069 219.776 50.5679 248.95 68.0722 283.958 42.7882 322.857 81.6866 429.827 81.6866 488.175 147.814 501.789",
    },
    {
      title: "BÄƒjenaru Matei",
      points:
        "178.933 264.509 165.318 223.666 200.327 198.382 223.666 217.831 217.831 254.784 260.619 268.399 252.84 299.518 221.721 317.022 215.886 404.543 233.39 408.433 227.556 505.679 167.263 499.844 155.594 293.683",
    },
    {
      title: "FÃ¢cÄƒ Cosmin",
      points:
        "155.594 289.793 175.043 260.619 161.428 210.051 157.538 149.759 132.255 141.979 118.64 167.263 114.75 208.106 120.585 260.619",
    },
    {
      title: "È˜chiopu Bogdan",
      points:
        "554.302 126.42 558.192 95.301 585.421 85.5764 604.87 95.301 604.87 126.42 593.2 163.373 564.027 165.318 552.357 206.161 525.128 182.822 536.798 141.979",
    },
  ];

  const [numeRamase, setNumeRamase] = useState([]);
  const [numeSelectate, setNumeSelectate] = useState([]);
  const [currentName, setCurrentName] = useState("");
  const [timer, setTimer] = useState(10);
  const [started, setStarted] = useState(false);

  const intervalRef = useRef(null);
  const timerRef = useRef(null);
  const [alegeri, setAlegeri] = useState(0);

  const alegeNume = () => {
    if (numeRamase.length === 0) {
      clearInterval(intervalRef.current);
      clearInterval(timerRef.current);
      setCurrentName("Gata! Toate numele au fost alese.");
      return;
    }

    const indexRandom = Math.floor(Math.random() * numeRamase.length);
    const numeAles = numeRamase[indexRandom];

    setNumeSelectate((prev) => [...prev, numeAles]);
    setNumeRamase((prev) => prev.filter((_, i) => i !== indexRandom));
    setCurrentName(numeAles);
    setTimer(10);
  };

  // Start automat + alegere la fiecare 10 secunde
  useEffect(() => {
    if (!started) return;

    alegeNume(); // primul imediat

    intervalRef.current = setInterval(() => {
      setAlegeri((prev) => prev + 1);
      alegeNume();
    }, 10000);

    return () => clearInterval(intervalRef.current);
  }, [started]);

  // Timer vizual (countdown)
  useEffect(() => {
    if (!started || numeRamase.length === 0) return;

    setTimer(10);
    timerRef.current = setInterval(() => {
      setTimer((prev) => (prev <= 1 ? 10 : prev - 1));
    }, 1000);

    return () => clearInterval(timerRef.current);
  }, [currentName, started]);

  const startSelectie = () => {
    setNumeRamase([...posi]);
    setNumeSelectate([]);
    setCurrentName("");
    setStarted(true);
  };

  const reset = () => {
    // opreÈ™te ce era pornit
    clearInterval(intervalRef.current);
    clearInterval(timerRef.current);

    // aduce stÄƒrile la valorile iniÈ›iale
    setNumeSelectate([]);
    setNumeRamase([...posi]);
    setCurrentName("");
    setTimer(10);

    // --- porneÈ™te manual jocul la fel ca Ã®n mount ---

    // primul nume imediat
    alegeNume();

    // ciclu automat de alegere la fiecare 10s
    intervalRef.current = setInterval(() => {
      alegeNume();
    }, 10000);

    // countdown vizual de 1s
    timerRef.current = setInterval(() => {
      setTimer((prev) => (prev <= 1 ? 10 : prev - 1));
    }, 1000);
    setAlegeri(0);
    setCorecte(0);
    // semnalizeazÄƒ cÄƒ jocul e pornit
    setStarted(true);
  };

  // const skip = () => {
  //   if (!started || numeRamase.length === 0) return;

  //   clearInterval(intervalRef.current);
  //   clearInterval(timerRef.current);
  //   alegeNume();
  //   intervalRef.current = setInterval(() => {
  //     alegeNume();
  //   }, 10000);
  // };
  const skip = () => {
    if (!started || numeRamase.length === 0) return;

    // opreÈ™te doar intervalul de selecÈ›ie la 10s
    clearInterval(intervalRef.current);

    // alege imediat urmÄƒtorul nume È™i reseteazÄƒ timer-ul intern
    alegeNume();

    // reporneÈ™te selecÈ›ia automatÄƒ la fiecare 10s
    intervalRef.current = setInterval(() => {
      alegeNume();
    }, 10000);
  };

  useEffect(() => {
    startSelectie();
  }, []);
  useEffect(() => {
    if (!loading_comp) {
      startLevel(uid, getLevel());
    }
  }, [, loading_comp]);

  const [corecte, setCorecte] = useState(0);
  const [mesaj, setMesaj] = useState("");
  const [showToast, setShowToast] = useState(false);
  const showToastMessage = (text) => {
    setMesaj(text);
    setShowToast(true);
    setTimeout(() => {
      setShowToast(false);
    }, 3000); // toast vizibil 3 secunde
  };
  const handleClick = (zoneTitle, event) => {
    event.preventDefault();
    setAlegeri((prev) => prev + 1);

    if (currentName.trim().toLowerCase() === zoneTitle.trim().toLowerCase()) {
      setCorecte((prev) => prev + 1);
      showToastMessage("e ok!");
    } else {
      showToastMessage("Nope!");
    }

    if (alegeri === 55) {
      showToastMessage("se reseteaza totul");
      reset();
    }

    if (corecte === 20) {
      showToastMessage("e ok");
      updateLevel(uid, 19, "mediu");
      to("/level19");
    }

    skip();
  };
  const hint = async (uid, level) => {
    await getHint(uid, level).then((res) => {
      if (res.data.ok) {
        alert(res.data.hint);
      } else {
        alert(res.data.message);
      }
    });
  };

  return (
    <div className="level">
      {!loading_comp ? (
        <div className="level18" style={{ width: "100%", height: "auto" }}>
          <Poveste />
          <div className="cerinta hint" onClick={() => hint(uid, getLevel())}>
            <img
              src={require("../../assets/img/styling/hint.svg").default}
              alt=""
            />
          </div>

          <div className="corecte">
            <h1>{corecte}/20</h1>
          </div>

          {showToast && (
            <div
              style={{
                position: "fixed",
                bottom: "20px",
                right: "20px",
                backgroundColor: "#333",
                color: "white",
                padding: "10px 20px",
                borderRadius: "8px",
                boxShadow: "0 0 10px rgba(0,0,0,0.3)",
                opacity: 0.95,
                zIndex: 1000,
                transition: "all 0.5s ease",
              }}
            >
              {mesaj}
            </div>
          )}
          {currentName && (
            <>
              <h1>{currentName}</h1>
              <br />
              <span>({timer}s)</span>
              <br />
            </>
          )}
          <svg
            style={{ width: "100%", height: "auto", display: "block" }}
            xmlns="http://www.w3.org/2000/svg"
            xmlnsXlink="http://www.w3.org/1999/xlink"
            viewBox="0 0 2048 659"
          >
            <style type="text/css">
              {`
            .image-mapper-shape {
                fill: rgba(0, 0, 0, 0); /* Transparent */
            }
            g:hover .image-mapper-shape {
                stroke: white;
                stroke-width: 2px;
                opacity: 0.2; /* Folosim 0.2 pentru 20% opacitate */
            }
          `}
            </style>

            <image
              xlinkHref={level18Image}
              style={{ width: "2048px" }}
              x="0"
              y="0"
              height="100%"
              width="100%"
              preserveAspectRatio="xMidYMid meet"
            ></image>

            {polygonData.map((zone, index) => (
              <a
                key={index}
                xlinkHref="#"
                target="---"
                xlinkTitle={zone.title}
                onClick={(event) => handleClick(zone.title, event)}
                style={{ cursor: "pointer" }}
              >
                <g>
                  <polygon
                    className="image-mapper-shape"
                    data-index={index + 1}
                    points={zone.points}
                    fill="transparent"
                  />
                </g>
              </a>
            ))}
          </svg>
        </div>
      ) : (
        <>Loading</>
      )}
    </div>
  );
}

export default Level18;
